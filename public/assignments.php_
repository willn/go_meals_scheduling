<?php
/*
 * Automated meals scheduling assignments
 */

require_once 'globals.php';
require_once 'classes/calendar.php';
require_once 'assign_workers.php';
#require_once 'assign_schedule.php';

global $dbh;

$r = new Roster();
$schedule = new Schedule();
$schedule->setRoster($r);

// load the dates and shifts needed
$schedule->initializeShifts();
$schedule->printNumMeals();

// remove special case...
unset($all_jobs['all']);

$job_ids_clause = get_job_ids_clause();


// --------------------------------------------------------------
// load all the survey prefs for every date
$prefs_table = SCHEDULE_PREFS_TABLE;
$shifts_table = SCHEDULE_SHIFTS_TABLE;
$auth_user_table = AUTH_USER_TABLE;
$sql = <<<EOSQL
	SELECT s.string as date, s.job_id, a.username, p.pref
		FROM {$auth_user_table} as a, {$prefs_table} as p, {$shifts_table} as s
		WHERE p.pref>0
			AND a.id=p.worker_id
			AND s.id = p.date_id
		ORDER BY s.string ASC,
			p.pref DESC,
			a.username ASC;
EOSQL;

foreach($dbh->query($sql) as $row) {
	$u = $row['username'];
	$d = $row['date'];
	$ji = $row['job_id'];
	$p = $row['pref'];

	$r->addWorker($u, $ji, $d, $p);

	// only add meals which are scheduled...
	$schedule->addPrefs($u, $ji, $d, $p);
}


// --------------------------------------------------------------
// get the list of workers who didn't respond to the survey, and their assigned
// job IDs
$sid = SEASON_ID;
$assn_table = ASSIGN_TABLE;
$sql = <<<EOSQL
SELECT u.username, a.job_id
	FROM {$assn_table} as a, {$auth_user_table} as u
	WHERE a.season_id={$sid}
		AND u.id=a.worker_id
		AND ({$job_ids_clause})
		AND a.worker_id NOT IN
			(SELECT worker_id FROM {$prefs_table} GROUP BY worker_id)
	GROUP BY a.worker_id, a.job_id
EOSQL;

$non_respond = array();
foreach($dbh->query($sql) as $row) {
	// fill in 'OK' preferences for all non-responders
	#!# only add 'default' response for dates which should contain the shift / job_id
	$schedule->addNonResponder($row['username'], $row['job_id']);
}

// --------------------------------------------------------------
// find how many each worker has been assigned
$sql = <<<EOSQL
SELECT u.username, a.job_id, a.instances
	FROM {$assn_table} as a, {$auth_user_table} as u
	WHERE a.season_id={$sid}
		AND a.type="a"
		AND a.worker_id = u.id
		AND ({$job_ids_clause})
	ORDER BY u.username
EOSQL;

// assign the number of shifts per worker
foreach($dbh->query($sql) as $row) {
	$r->setNumberOfShifts($row['username'], $row['instances'], $row['job_id']);
}

// sort
foreach(array_keys($all_jobs) as $j) {
	$schedule->setJobId($j);
	$r->setJobId($j);

	// keep assigning until all the meals have been assigned
	while ($schedule->sortPossible() && !$schedule->isFinished()) {
		$worker_freedom = $r->sortAvailable();
		$schedule->fillMeal($worker_freedom);
	}
}

$schedule->printResults();
$r->printResults();

echo "\n-----[ the end ]-----\n";

?>
